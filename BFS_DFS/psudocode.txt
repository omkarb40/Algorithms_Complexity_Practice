# Pseudocode for Coin Distribution System
## Function: distribute_coins
Function distribute_coins(total_amount, num_cashiers):
    /*
    Main function to distribute coins among cashiers using a greedy approach.
    Parameters:
        total_amount: Total amount to distribute (in cents)
        num_cashiers: Number of cashiers to distribute among
    Returns:
        Dictionary containing distribution of coins per cashier
    */

    // Input validation
    If total_amount ≤ 0 OR num_cashiers ≤ 0 Then
        Throw Error("Total amount and number of cashiers must be positive")

    // Check if amount can be evenly distributed
    If total_amount MOD num_cashiers ≠ 0 Then
        Throw Error("Total amount must be evenly divisible by number of cashiers")

    // Define available coin denominations (in cents, largest to smallest)
    denominations = [50, 25, 10, 5, 1]

    // Calculate amount each cashier should receive
    amount_per_cashier = total_amount ÷ num_cashiers

    // Initialize result dictionary to store coin counts
    distribution = Empty dictionary
    For each denomination in denominations:
        distribution[denomination] = 0

    // Track remaining amount to be distributed
    remaining = amount_per_cashier

    // Greedy coin selection process
    For each denomination in denominations:
        If remaining ≥ denomination Then
            // Calculate how many coins of current denomination to use
            num_coins = remaining ÷ denomination
            distribution[denomination] = num_coins
            remaining = remaining MOD denomination

    Return distribution

## Function: print_distribution

    Function print_distribution(distribution):
    /*
    Prints the coin distribution in a formatted manner.
    Parameters:
        distribution: Dictionary containing coin counts per denomination
    */

    // Calculate total number of coins used
    total_coins = Sum of all values in distribution

    Print "Coin Distribution per Cashier:"
    Print separator line
    
    // Print each denomination's count if greater than 0
    For each denomination, count in distribution:
        If count > 0 Then
            Print "[count] coin(s) of [denomination] cents"
    
    Print separator line
    Print "Total coins per cashier: [total_coins]"


## Main Program Flow

Function main():
    /*
    Main function to demonstrate the coin distribution algorithm
    with example usage and error handling
    */

    Try:
        // Example usage
        total_amount = 1000  // $10.00 in cents
        num_cashiers = 4

        Print "Distributing $[total_amount/100] among [num_cashiers] cashiers"

        // Get coin distribution
        distribution = distribute_coins(total_amount, num_cashiers)

        // Display results
        print_distribution(distribution)

    Catch Error as e:
        Print "Error: [error message]"

