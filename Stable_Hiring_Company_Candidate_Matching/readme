# Stable Hiring - Company and Candidate Matching

A recruitment agency is helping N companies and N candidates to find the perfect match. Each company ranks all candidates based on their skills and interviews, while candidates have their own preference rankings for the companies.

Your goal is to determine a stable hiring arrangement using the Gale-Shapley algorithm, ensuring that no candidate and company would both prefer each other over their assigned partners.

A stable match means:

- Each company proposes to candidates in order of preference.
- If a candidate is free, they accept the offer.
- If the candidate is already matched with a company, they will accept a new offer only if they prefer the new company over the current one.

You must implement the algorithm and output the final stable pairings.

In this problem there will be 2 hidden Test cases

### Input Format

- The first line contains an integer N (1 ≤ N ≤ 50), representing the number of companies and candidates.
- The next N lines contain N integers each, representing the preference list of companies (indices 0 to N-1), where the first integer is the most preferred candidate.
- The next N lines contain N integers each, representing the preference list of candidates (indices 0 to N-1), where the first integer is the most preferred company.

### Constraints

- 1≤N≤50
- All preferences are unique and valid (no duplicate values).
- The indices of companies and candidates start from 0 to N-1.

### Output Format

Print N lines, each containing two space-separated integers {candidate_index} {company_index}, sorted by candidate index.

#### Sample input 0

3
2 1 0
1 2 0
0 1 2
1 0 2
2 0 1
0 2 1

#### Sample Output 0

0 2
1 1
2 0

#### Explanation 0

There are 3 companies and 3 candidates. Preferences (most preferred first):

- Companies: [2 1 0], [1 2 0], [0 1 2]
- Candidates: [0 1 2], [1 0 2], [2 0 1]

Step-by-step process:

1. Company 0 matches with Candidate 2.
2. Company 1 matches with Candidate 1.
3. Company 2 matches with Candidate 0.